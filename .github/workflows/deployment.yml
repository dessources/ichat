name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_READONLY_CONTENT_API_URL: ${{ secrets.NEXT_PUBLIC_READONLY_CONTENT_API_URL }}
  NEXT_PUBLIC_CONTENT_API_URL: ${{ secrets.NEXT_PUBLIC_CONTENT_API_URL }}
  NEXT_PUBLIC_CONTENT_API_TOKEN: ${{ secrets.NEXT_PUBLIC_CONTENT_API_TOKEN }}
  NEXT_PUBLIC_API_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_API_ACCESS_TOKEN }}
  BAD_API_ACCESS_TOKEN: ${{secrets.BAD_API_ACCESS_TOKEN}}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
  JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
  CI: true
  TEST_USER_USERNAME: ${{secrets.TEST_USER_USERNAME}}
  TEST_USER_PASSWORD: ${{secrets.TEST_USER_PASSWORD}}
  TEST_USER_REFRESH_TOKEN: ${{secrets.TEST_USER_REFRESH_TOKEN}}
  TEST_USER_ID: ${{secrets.TEST_USER_ID}}
  TEST_CHAT_ID: ${{secrets.TEST_CHAT_ID}}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
on:
  push:
    branches:
      - main
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          echo "Running Installing Dependencies ..."
          npm i
      - name: Run Tests
        run: |
          echo "Running  tests..."
          npm run test:ci
        env:
          CI: true

  # cypress_e2e_tests:
  #   name: Cypress E2E tests
  #   runs-on: ubuntu-latest
  #   needs: [Test]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       browsers: ["chrome", "firefox", "edge"]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v5
  #       with:
  #         build: npm run build
  #         start: npm run start
  #         browser: ${{matrix.browsers}}
  #         # record: true
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}

  Deploy-Production:
    needs: [Test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: |
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
